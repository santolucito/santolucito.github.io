{
  "paths": [
    {
      "type": "file",
      "value": "index.md"
    },
    {
      "type": "dir",
      "name": "1_Preliminaries",
      "children": [
        {
          "type": "file",
          "value": "1_Preliminaries/1_Development_Tools.md"
        },
        {
          "type": "file",
          "value": "1_Preliminaries/2_Hardware.md"
        },
        {
          "type": "file",
          "value": "1_Preliminaries/3_Communication.md"
        },
        {
          "type": "file",
          "value": "1_Preliminaries/index.md"
        }
      ]
    },
    {
      "type": "dir",
      "name": "2_Modules",
      "children": [
        {
          "type": "dir",
          "name": "1_Generative_Art",
          "children": [
            {
              "type": "file",
              "value": "2_Modules/1_Generative_Art/index.md"
            }
          ]
        },
        {
          "type": "dir",
          "name": "2_Interactive_Devices",
          "children": [
            {
              "type": "file",
              "value": "2_Modules/2_Interactive_Devices/index.md"
            }
          ]
        },
        {
          "type": "dir",
          "name": "3_Installation_Art",
          "children": [
            {
              "type": "file",
              "value": "2_Modules/3_Installation_Art/HW3.md"
            },
            {
              "type": "file",
              "value": "2_Modules/3_Installation_Art/index.md"
            }
          ]
        },
        {
          "type": "dir",
          "name": "4_Kinetic_Scuplture",
          "children": [
            {
              "type": "file",
              "value": "2_Modules/4_Kinetic_Scuplture/index.md"
            }
          ]
        },
        {
          "type": "dir",
          "name": "5_Interactive_Installation_Art",
          "children": [
            {
              "type": "file",
              "value": "2_Modules/5_Interactive_Installation_Art/index.md"
            }
          ]
        },
        {
          "type": "dir",
          "name": "6_Distributed_Networks",
          "children": [
            {
              "type": "file",
              "value": "2_Modules/6_Distributed_Networks/index.md"
            }
          ]
        },
        {
          "type": "dir",
          "name": "7_Final_Project",
          "children": [
            {
              "type": "file",
              "value": "2_Modules/7_Final_Project/index.md"
            }
          ]
        },
        {
          "type": "file",
          "value": "2_Modules/index.md"
        }
      ]
    },
    {
      "type": "dir",
      "name": "Appendix",
      "children": [
        {
          "type": "file",
          "value": "Appendix/How_Low_Can_you_Go.md"
        }
      ]
    },
    {
      "type": "dir",
      "name": "ExternalResources",
      "children": [
        {
          "type": "dir",
          "name": "Code",
          "children": [
            {
              "type": "file",
              "value": "ExternalResources/Code/getESP32.sh"
            }
          ]
        },
        {
          "type": "dir",
          "name": "Documentation",
          "children": [
            {
              "type": "file",
              "value": "ExternalResources/Documentation/Esp32_DevKit_pinmap.png"
            },
            {
              "type": "file",
              "value": "ExternalResources/Documentation/esp32_datasheet_en.pdf"
            }
          ]
        },
        {
          "type": "dir",
          "name": "Readings",
          "children": [
            {
              "type": "file",
              "value": "ExternalResources/Readings/Live-Coding-Education.pdf"
            }
          ]
        },
        {
          "type": "file",
          "value": "ExternalResources/index.md"
        }
      ]
    },
    {
      "type": "dir",
      "name": "Syllabus",
      "children": [
        {
          "type": "file",
          "value": "Syllabus/Creative Embedded Systems Syllabus.txt"
        }
      ]
    }
  ],
  "contents": [
    {
      "path": "index.md",
      "url": "index.html",
      "content": "# CPSC334\n\n\nThis folder holds the materials for CPSC334: Creative Embedded System, as it will be taught at Yale, Fall 2020.\n\nThe 'Syllabus' directory holds the syllabus\n\nThe 'Modules' directory holds all of our original textual and visual material that we develop for the class.\n\nThe 'External_Resources' directory holds external resources that are used during the class.\nThese will be at times references by Modules.\nExternal resources can include documentation, texts, links, audio, video, setup scripts, etc\n\n# Generating HTML\n\nThis folder can also be used to generate a website of the content using https://www.npmjs.com/package/markdown-folder-to-html\n",
      "html": "<h1>CPSC334</h1>\n<p>This folder holds the materials for CPSC334: Creative Embedded System, as it will be taught at Yale, Fall 2020.</p>\n<p>The ‘Syllabus’ directory holds the syllabus</p>\n<p>The ‘Modules’ directory holds all of our original textual and visual material that we develop for the class.</p>\n<p>The ‘External_Resources’ directory holds external resources that are used during the class.\nThese will be at times references by Modules.\nExternal resources can include documentation, texts, links, audio, video, setup scripts, etc</p>\n<h1>Generating HTML</h1>\n<p>This folder can also be used to generate a website of the content using <a href=\"https://www.npmjs.com/package/markdown-folder-to-html\">https://www.npmjs.com/package/markdown-folder-to-html</a></p>\n",
      "id": 0
    },
    {
      "path": "1_Preliminaries/1_Development_Tools.md",
      "url": "1_Preliminaries/1_Development_Tools.html",
      "content": "# Development Environment\n\nThe dev environment you choose is important. \nYou should just use Linux.\n",
      "html": "<h1>Development Environment</h1>\n<p>The dev environment you choose is important.\nYou should just use Linux.</p>\n",
      "id": 1
    },
    {
      "path": "1_Preliminaries/2_Hardware.md",
      "url": "1_Preliminaries/2_Hardware.html",
      "content": "# Hardware\n\n# Raspberry Pi\n\n# Arduino\n\n# ESP32/ESP8266\n",
      "html": "<h1>Hardware</h1>\n<h1>Raspberry Pi</h1>\n<h1>Arduino</h1>\n<h1>ESP32/ESP8266</h1>\n",
      "id": 2
    },
    {
      "path": "1_Preliminaries/3_Communication.md",
      "url": "1_Preliminaries/3_Communication.html",
      "content": "# Communications\n\nThere are various protocols, each with their own strengths.\nHere we introduce some of the more common protocols, and consider some design tradeoffs of their application to creative embedded systems.\n\n\n## Protocols\n\n### OSC\n\n### MIDI\n\n### UDP/TCP\n\n### Bluetooth/BLE\n\n\n",
      "html": "<h1>Communications</h1>\n<p>There are various protocols, each with their own strengths.\nHere we introduce some of the more common protocols, and consider some design tradeoffs of their application to creative embedded systems.</p>\n<h2>Protocols</h2>\n<h3>OSC</h3>\n<h3>MIDI</h3>\n<h3>UDP/TCP</h3>\n<h3>Bluetooth/BLE</h3>\n",
      "id": 3
    },
    {
      "path": "1_Preliminaries/index.md",
      "url": "1_Preliminaries/index.html",
      "content": "# Preliminaries\n\nThis chapter provides an introduction of the basics of the specific technologies that we will be utilizing throughout this book.\nThe material contained in this chapter is likely to change over time, as new technologies are developed and released.\n\n",
      "html": "<h1>Preliminaries</h1>\n<p>This chapter provides an introduction of the basics of the specific technologies that we will be utilizing throughout this book.\nThe material contained in this chapter is likely to change over time, as new technologies are developed and released.</p>\n",
      "id": 4
    },
    {
      "path": "2_Modules/1_Generative_Art/index.md",
      "url": "2_Modules/1_Generative_Art/index.html",
      "content": "# System Configuration\n\nThis chapter focuses on the following system configuration. \n\n              |------|\n              |  Pi  | ---> D_out\n              |------|  \n\n\nThis is the simplest systems we will address - a microcomputer with digital out.\nYou have two options for digital out - either visual or audio.\n\n---------------\n\n# Live Coding \n\nIn our taxonomy of systems, we allow audio or visuals as D_out.\nFor live coding, we do require some input from the artist (in the form of a keyboard and mouse), but this is not input ``visible'' to the viewer.\n\n## Audio \n\nYour raspberry pi comes pre-installed with a program called Sonic Pi.\nWe will start exploring the practice of live coding with this tool.\n\n## Visuals\n\nLive coding for visuals is also an active space of exploration.\nFor visuals, we will use Hydra (?)\n\n## Examples\n\n# Kiosk Installation Art\n\n## Audio\n\n## Interactivity\n\nSome, but not all, installation art will rely on input from the viewer.\nIn this chapter we do not consider interactivity.\nThe viewer may contribute to the art knowingly or unknowingly.\nWe will not draw a formal distinction between these two types of input as, from a technical perspective, we must solve similar issues.\n\n\n",
      "html": "<h1>System Configuration</h1>\n<p>This chapter focuses on the following system configuration.</p>\n<pre><code>          |------|\n          |  Pi  | ---&gt; D_out\n          |------|  \n</code></pre>\n<p>This is the simplest systems we will address - a microcomputer with digital out.\nYou have two options for digital out - either visual or audio.</p>\n<hr>\n<h1>Live Coding</h1>\n<p>In our taxonomy of systems, we allow audio or visuals as D_out.\nFor live coding, we do require some input from the artist (in the form of a keyboard and mouse), but this is not input ``visible’’ to the viewer.</p>\n<h2>Audio</h2>\n<p>Your raspberry pi comes pre-installed with a program called Sonic Pi.\nWe will start exploring the practice of live coding with this tool.</p>\n<h2>Visuals</h2>\n<p>Live coding for visuals is also an active space of exploration.\nFor visuals, we will use Hydra (?)</p>\n<h2>Examples</h2>\n<h1>Kiosk Installation Art</h1>\n<h2>Audio</h2>\n<h2>Interactivity</h2>\n<p>Some, but not all, installation art will rely on input from the viewer.\nIn this chapter we do not consider interactivity.\nThe viewer may contribute to the art knowingly or unknowingly.\nWe will not draw a formal distinction between these two types of input as, from a technical perspective, we must solve similar issues.</p>\n",
      "id": 5
    },
    {
      "path": "2_Modules/2_Interactive_Devices/index.md",
      "url": "2_Modules/2_Interactive_Devices/index.html",
      "content": "# System Configuration\n\n\n---\n\n# Digital Instruments\n\nInteractive devices can be used to help artists in performance.\n\n## Examples\n\nNIME\n\n\n\n",
      "html": "<h1>System Configuration</h1>\n<hr>\n<h1>Digital Instruments</h1>\n<p>Interactive devices can be used to help artists in performance.</p>\n<h2>Examples</h2>\n<p>NIME</p>\n",
      "id": 6
    },
    {
      "path": "2_Modules/3_Installation_Art/HW3.md",
      "url": "2_Modules/3_Installation_Art/HW3.html",
      "content": "# ...\n",
      "html": "<h1>…</h1>\n",
      "id": 7
    },
    {
      "path": "2_Modules/3_Installation_Art/index.md",
      "url": "2_Modules/3_Installation_Art/index.html",
      "content": "# System Configuration\n\nIn module 3, we break the physical link between the microcontroller and the server and explore wireless methods of data communication including wi-fi, BlueTooth, BlueTooth Low Energy, and more. Simultaneously, we encounter and incorporate technical and artistic motivations for autonomous creative systems that are potentially transparent to the viewer/listener. Those technologies include power considerations. The aesthetic considerations relate to the acousmatic - the heard but not seen.\n\n---\n\n# Sound Design\n",
      "html": "<h1>System Configuration</h1>\n<p>In module 3, we break the physical link between the microcontroller and the server and explore wireless methods of data communication including wi-fi, BlueTooth, BlueTooth Low Energy, and more. Simultaneously, we encounter and incorporate technical and artistic motivations for autonomous creative systems that are potentially transparent to the viewer/listener. Those technologies include power considerations. The aesthetic considerations relate to the acousmatic - the heard but not seen.</p>\n<hr>\n<h1>Sound Design</h1>\n",
      "id": 8
    },
    {
      "path": "2_Modules/4_Kinetic_Scuplture/index.md",
      "url": "2_Modules/4_Kinetic_Scuplture/index.html",
      "content": "# System Configuration\n\nModule 4 introduces actuators (motors, LEDs) with HO to allow our system to take action in the physical world. \n\n----\n\n\n# Examples\n\nWe will look at examples of this work, such as the installation Kinetic Rain by the Art+Com group. \nThis system configuration is particularly well suited to commercial installation art, for example in the synchronized drone swarms as popularly displayed at the opening ceremony of the Beijing Olympics.\n",
      "html": "<h1>System Configuration</h1>\n<p>Module 4 introduces actuators (motors, LEDs) with HO to allow our system to take action in the physical world.</p>\n<hr>\n<h1>Examples</h1>\n<p>We will look at examples of this work, such as the installation Kinetic Rain by the Art+Com group.\nThis system configuration is particularly well suited to commercial installation art, for example in the synchronized drone swarms as popularly displayed at the opening ceremony of the Beijing Olympics.</p>\n",
      "id": 9
    },
    {
      "path": "2_Modules/5_Interactive_Installation_Art/index.md",
      "url": "2_Modules/5_Interactive_Installation_Art/index.html",
      "content": "# System Configuration\n\nIn module 5 we combine all previous system configurations to build installations that can take user input Hi and actuate HO accordingly. This system configuration is utilized for purposes of augmented experience design. \n\n----\n\n# Examples\n\n\nWe will look at the work of the MIT Media Lab group Opera of the Future, which has utilized this configuration in much of their work.\n\n",
      "html": "<h1>System Configuration</h1>\n<p>In module 5 we combine all previous system configurations to build installations that can take user input Hi and actuate HO accordingly. This system configuration is utilized for purposes of augmented experience design.</p>\n<hr>\n<h1>Examples</h1>\n<p>We will look at the work of the MIT Media Lab group Opera of the Future, which has utilized this configuration in much of their work.</p>\n",
      "id": 10
    },
    {
      "path": "2_Modules/6_Distributed_Networks/index.md",
      "url": "2_Modules/6_Distributed_Networks/index.html",
      "content": "# System Configuration\n\nIn the final guided module, we introduce distributed sensing and actuating networks for larger scale installations. This module does not introduce new modes of expression, but rather gives the artist the tools to scale up the previous configurations to match real world use cases.\n\n\n----\n",
      "html": "<h1>System Configuration</h1>\n<p>In the final guided module, we introduce distributed sensing and actuating networks for larger scale installations. This module does not introduce new modes of expression, but rather gives the artist the tools to scale up the previous configurations to match real world use cases.</p>\n<hr>\n",
      "id": 11
    },
    {
      "path": "2_Modules/7_Final_Project/index.md",
      "url": "2_Modules/7_Final_Project/index.html",
      "content": "The final module of the class is an open-ended exploration of system configurations we have explored in class. Students are required to use a minimum set of sensors, actuators, and digital outputs in their own designs. \n\n",
      "html": "<p>The final module of the class is an open-ended exploration of system configurations we have explored in class. Students are required to use a minimum set of sensors, actuators, and digital outputs in their own designs.</p>\n",
      "id": 12
    },
    {
      "path": "2_Modules/index.md",
      "url": "2_Modules/index.html",
      "content": "# Introduction\n\nIn this section, we introduce increasingly complex types of embedded systems.\nWe call each type a _system configuration_.\nA system configuration defines at a high level, the _interface_ of the embedded system to the viewer.\n\n\nWe will refer to two parties - the artist and the viewer.\nThese are roughly equivalent to what more traditional texts would refer to as the developer and the user.\n",
      "html": "<h1>Introduction</h1>\n<p>In this section, we introduce increasingly complex types of embedded systems.\nWe call each type a <em>system configuration</em>.\nA system configuration defines at a high level, the <em>interface</em> of the embedded system to the viewer.</p>\n<p>We will refer to two parties - the artist and the viewer.\nThese are roughly equivalent to what more traditional texts would refer to as the developer and the user.</p>\n",
      "id": 13
    },
    {
      "path": "Appendix/How_Low_Can_you_Go.md",
      "url": "Appendix/How_Low_Can_you_Go.html",
      "content": "# How low can you go?\n\nWhen writing code for a microcontroller, there are a number of languages and development tools available to you.\nYou must choose which tools to use.\nYou can choose to go as low level as printing PCBs, or use a high level language like Python or Haskell.\n\n# cmake vs Arduino IDE\n\nWhen writing code for an Arduino, you can use the Arduino IDE and write in a C-like language.\nYou can also write C code directly, and then manually flash the code onto the device.\n\n",
      "html": "<h1>How low can you go?</h1>\n<p>When writing code for a microcontroller, there are a number of languages and development tools available to you.\nYou must choose which tools to use.\nYou can choose to go as low level as printing PCBs, or use a high level language like Python or Haskell.</p>\n<h1>cmake vs Arduino IDE</h1>\n<p>When writing code for an Arduino, you can use the Arduino IDE and write in a C-like language.\nYou can also write C code directly, and then manually flash the code onto the device.</p>\n",
      "id": 14
    },
    {
      "path": "ExternalResources/index.md",
      "url": "ExternalResources/index.html",
      "content": "# External Resources\n\nThis folder contains content to supplement modules\n",
      "html": "<h1>External Resources</h1>\n<p>This folder contains content to supplement modules</p>\n",
      "id": 15
    }
  ]
}